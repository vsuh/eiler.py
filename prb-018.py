# VSCraft
#
"""
задача:  https://projecteuler.net/problem=18
перевод: http://euler.jakumo.org/problems/view/18.html

Начиная в вершине треугольника (см. пример ниже) и перемещаясь вниз на смежные числа, максимальная
сумма до основания составляет 23.

     (3)
    (7) 4
   2 (4) 6
  8 5 (9) 3

То есть, 3 + 7 + 4 + 9 = 23.

Найдите максимальную сумму пути от вершины до основания следующего треугольника:

                            75
                          95 64
                        17 47 82
                      18 35 87 10
                    20 04 82 47 65
                  19 01 23 75 03 34
                88 02 77 73 07 63 67
              99 65 04 28 06 16 70 92
            41 41 26 56 83 40 80 70 33
          41 48 72 33 47 32 37 16 94 29
        53 71 44 65 25 43 91 52 97 51 14
      70 11 33 28 77 73 17 78 39 68 17 57
    91 71 52 38 17 14 91 43 58 50 27 29 48
  63 66 04 68 89 53 67 30 73 16 69 87 40 31
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23

Примечание: Так как в данном треугольнике всего 16384 возможных маршрута от вершины до основания, эту задачу
можно решить проверяя каждый из маршрутов. Однако похожая Задача 67 с треугольником, состоящим из сотни ssок,
не решается перебором (brute force) и требует более умного подхода! ;o)

"""
# solved 20.05.2019 09:24 (1074)

srcStr = '''75
95 64
17 47 82
18 35 87 10
20 04 82 47 65
19 01 23 75 03 34
88 02 77 73 07 63 67
99 65 04 28 06 16 70 92
41 41 26 56 83 40 80 70 33
41 48 72 33 47 32 37 16 94 29
53 71 44 65 25 43 91 52 97 51 14
70 11 33 28 77 73 17 78 39 68 17 57
91 71 52 38 17 14 91 43 58 50 27 29 48
63 66 04 68 89 53 67 30 73 16 69 87 40 31
04 62 98 27 23 09 70 98 73 93 38 53 60 04 23'''

# вар 2. правильный
srcList = []

for ss in srcStr.split('\n'):
    srcList.append(ss.split(' '))

for lineNum in range(len(srcList)-2, -1, -1):
    # print(lineNum, srcList[lineNum])
    newLine = []
    for NN in range(0, len(srcList[lineNum])):
        newLine.append(int(srcList[lineNum][NN]) + max(int(srcList[lineNum+1][NN]), int(srcList[lineNum+1][NN+1])))
    srcList[lineNum] = newLine[:]
    if lineNum == 0:
        break

for lineNum in range(len(srcList)-2, -1, -1):
    print(lineNum, srcList[lineNum])


# # вар. 1 неправильный
# ll = []
#
# for ss in srcStr.split('\n'):
#     ll.append(ss.split(' '))
#
# path = []
# cn = 0
# i = 0
#
# for o in ll:
#     i += 1
#     if i == 1:
#         mx = o[cn]
#     elif i == 2:
#         mx = max(o)
#     else:
#         mx = max(o[cn:cn + 2])
#     path.append(int(mx))
#     cn = o.index(mx, cn)
#     print('стр {} макс {} индекс {}'.format(i, mx, cn))
#
#
# print(sum(path), '<<--', path)
#
